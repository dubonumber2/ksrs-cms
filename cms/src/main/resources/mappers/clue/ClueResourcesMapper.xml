<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ksrs.cms.mapper.clue.ClueResourcesMapper" >
  <resultMap id="BaseResultMap" type="com.ksrs.cms.model.Resources" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="resUrl" property="resurl" jdbcType="VARCHAR" />
    <result column="init" property="init" jdbcType="VARCHAR"/>
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="parentId" property="parentid" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="MenuMap" type="com.ksrs.cms.resourcesUtil.Menu">
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="resUrl" property="url" jdbcType="VARCHAR" />
    <result column="init" property="init" jdbcType="VARCHAR" />
    <result column="permission" property="permission" jdbcType="VARCHAR"/>
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="parentId" property="parentId" jdbcType="INTEGER" />
    <result column="english_name" property="englishName" jdbcType="VARCHAR"/>
    <result column="sort" property="sort" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, resUrl, init,type,permission, parentId, english_name,sort
  </sql>
  <select id="selectByPrimaryKey" resultMap="MenuMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from resources
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from resources
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ksrs.cms.model.Resources" >
    insert into resources (id, name, resUrl, 
      type, parentId, sort
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{resurl,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{parentid,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ksrs.cms.model.Resources" >
    insert into resources
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="resurl != null" >
        resUrl,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="parentid != null" >
        parentId,
      </if>
      <if test="sort != null" >
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="resurl != null" >
        #{resurl,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ksrs.cms.resourcesUtil.Menu" >
    update resources
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        resUrl = #{url,jdbcType=VARCHAR},
      </if>
      <if test="init != null">
        init = #{init,jdbcType=VARCHAR}
      </if>
      <if test="permission !=null">
        permission = #{permission,jdbcType=VARCHAR}
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parentId = #{parentId,jdbcType=INTEGER},
      </if>
        <if test="englishName!=null and englishName.length()>0">
            english_name = #{englishName,jdbcType=VARCHAR}
        </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ksrs.cms.model.Resources" >
    update resources
    set name = #{name,jdbcType=VARCHAR},
      resUrl = #{resurl,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      parentId = #{parentid,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByRoleId" resultMap="MenuMap">
    SELECT r.* FROM resources r LEFT JOIN role_resources rr on r.id = rr.resourcesId where rr.roleId=${roleId}
    order by r.sort ASC
  </select>
  
  <select id="queryAll" resultMap="MenuMap">
      select
      <include refid="Base_Column_List"/>
      from `resources`
      order by sort ASC
  </select>
  
  <select id="findResourcesByRoleIds" resultMap="MenuMap">
        SELECT r.* FROM resources r LEFT JOIN role_resources rr on r.id = rr.resourcesId where rr.roleId IN 
        <foreach collection="roleIds" open="(" close=")" separator="," item="item">
          #{item}
        </foreach>
    order by r.sort ASC
  </select>
  <select id="findResourcesIdByRoleId" resultType="integer">
    select resourcesId from `role_resources` where roleId = #{roleId}
  </select>

    <insert id="insertResources" parameterType="com.ksrs.cms.resourcesUtil.Menu">
        INSERT INTO `resources` (`name`,`resUrl`,`init`,`permission`,`type`,`parentId`,`english_name`,`sort`)
        VALUES (#{name} , #{url},#{init},#{permission},#{type},#{parentId},#{englishName},#{sort})
    </insert>
  <delete id="deleteResourcesByIds" parameterType="java.util.List">
    DELETE FROM `resources`
    WHERE id in
    <foreach collection="list" item="value" separator="," open="(" close=")" >
      #{value}
    </foreach>
  </delete>
  <delete id="deleteRoleResourcesByIds" parameterType="java.util.List">
    DELETE FROM `role_resources`
    WHERE resourcesId in
    <foreach collection="list" item="value" separator="," open="(" close=")" >
      #{value}
    </foreach>
  </delete>
</mapper>